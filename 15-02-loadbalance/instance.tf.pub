# NAT instance
resource "yandex_compute_instance" "default" {
  name        = "nat-instance"
  platform_id = "standard-v1"
  zone        = "ru-central1-a"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd80mrhj8fl2oe87o4e1"
    }
  }

  network_interface {
    subnet_id      = yandex_vpc_subnet.public.id
    ip_address     = "192.168.10.254"
    nat            = true
    #nat_ip_address = "51.250.0.160"
  }

  metadata = {
    ssh-keys = "kosmos:${file("~/.ssh/authorized_keys")}"
  }
}

# Instance Group
resource "yandex_iam_service_account" "kosmos-ig" {
  name        = "kosmos-ig"
  description = "service account to manage IG"
}

resource "yandex_resourcemanager_folder_iam_binding" "editor" {
  folder_id = "b1goc0kk3n1mapcihpk1"
  role      = "editor"
  members   = [
    "serviceAccount:${yandex_iam_service_account.kosmos-ig.id}",
  ]
}

resource "yandex_compute_instance_group" "ig-1" {
  name               = "fixed-ig-with-balancer"
  folder_id          = "b1goc0kk3n1mapcihpk1"
  service_account_id = "${yandex_iam_service_account.kosmos-ig.id}"
  instance_template {
    platform_id = "standard-v1"
    resources {
      memory = 2
      cores  = 2
    }

    boot_disk {
      mode = "READ_WRITE"
      initialize_params {
        image_id = "fd827b91d99psvq5fjit"
      }
    }

    network_interface {
      network_id = "${yandex_vpc_network.netology-vpc.id}"
      subnet_ids = ["${yandex_vpc_subnet.public.id}"]
      nat        = true
    }

    metadata = {
      user-data = "${file("/git/devkub-homeworks/15-02-loadbalance/user-kosmos-vm.yaml")}"
    }
    
    scheduling_policy {
      preemptible = true
    }
  }

  scale_policy {
    fixed_scale {
      size = 3
    }
  }

  allocation_policy {
    zones = ["ru-central1-a"]
  }

  deploy_policy {
    max_unavailable = 1
    max_expansion   = 0
  }

  load_balancer {
    target_group_name        = "netology-target-group"
    target_group_description = "load balancer target group"
  }
}